---
interface Props {
  source: "local" | "external"
  link: string
  filename: string
  class?: string
}

const { source, link, filename, class: suppliedClass } = Astro.props
---

<a
  href={link}
  download={filename}
  class:list={[suppliedClass]}
  data-source={source}
  data-link={link}
>
  {filename}
</a>

<script>
  import { downloadObjectAsFile } from '#/lib/utilities.ts'

  const downloadFileElement = document.querySelector('a[data-link]')
  const linkValue = downloadFileElement?.dataset.link
  const source = downloadFileElement?.dataset.source

  if (source === 'external' && linkValue && linkValue?.startsWith('http')) {
    downloadFileElement.addEventListener(
      'click',
      async event => {
        event.preventDefault()
        const response = await fetch(linkValue)
        const data = (await response.json()) as Record<string, any>
        downloadObjectAsFile({ filename: downloadFileElement.download, data })
      },
      { once: true },
    )
  }
</script>
