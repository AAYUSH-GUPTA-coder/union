---
import { Image } from "astro:assets"
import H1 from "../typography/h1.astro"
import TextP from "../typography/TextP.astro"
import bubbles from "../../assets/images/spline-holders/bubbles.png"
import smallWhale from "../../assets/images/whale.png"
import cube from "../../spline/cube-rotating-optimized.splinecode"
import Spline from "../Spline.astro"

const diver = [
  { text: "What is Union?", meter: "200m" },
  { text: "What is Interoperability?", meter: "400m" },
  { text: "What is Modularity?", meter: "600m" },
  { text: "Union Use Cases", meter: "800m" },
  { text: "How Union Works", meter: "1000m" },
  { text: "Trust Verification", meter: "1200m" },
  { text: "Galois", meter: "1400m" },
  { text: "CometBLS", meter: "1600m" },
  { text: "Voyager", meter: "1800m" }
]
---

<div class="flex justify-center  learn-gradient pb-24 " id="swim-container">
  <Image src={bubbles} alt="bubbles"
         class="absolute inset-0 w-full h-full object-cover object-center mix-blend-soft-light"></Image>

  <div class="relative grid grid-cols-4 gap-4 max-w-[1440px] px-6">
    <div class="flex flex-col col-span-full md:col-span-3 gap-12 md:gap-24 lg:gap-48">

      <div>
        <H1>What is <span class="text-accent-500">union?</span></H1>
        <div class="flex flex-col 2xl:flex-row gap-8 w-full pt-5">
          <div class="flex flex-col md:max-w-[576px] w-full gap-8">
            <TextP>Union is a modular interoperability protocol which facilitates the exchange of
              assets and
              messages between execution environments.
            </TextP>
            <TextP>Union’s key innovation is in combining consensus verification, where validators
              on
              one chain
              verify that consensus was achieved among validators on another chain before
              accepting a
              transfer.
            </TextP>
            <TextP>Combined with this innovation is secure Zero-Knowledge cryptography, which
              reduces
              the
              computing power and gas required to facilitate a transfer.
            </TextP>
            <TextP>Together, this means fast and cost-effective connection between protocols across
              any
              execution environment with zero trusted actors.
            </TextP>
          </div>
          <div class="object-contain h-auto w-full">
            <Spline model={cube} loading="eager"/>
          </div>
        </div>
      </div>


      <div>
        <H1>What is <br><span class="text-accent-500">Interoperability?</span></H1>
        <div class="flex flex-col 2xl:flex-row gap-8 w-full pt-5">
          <div class="flex flex-col md:max-w-[576px] w-full gap-8">
            <TextP>Interoperability in reference to blockchains, is their ability to pass messages
              and communicate with each other.
            </TextP>
            <TextP>Union enables developers to build with any stack and connect with any execution
              environment or language, such as Solidity, Rust, and Move. This removes UX bottlenecks
              stemming from fragmented networks.
            </TextP>
            <H1>What is <span class="text-accent-500">Modularity?</span></H1>
            <TextP>Modularity in crypto refers to the design principle where a blockchain system is
              built using interchangeable, self-contained components that can be developed, updated, or
              replaced independently. This approach enhances flexibility, scalability, and maintainability
              by allowing developers to focus on specific functions or features without affecting the
              entire system.
            </TextP>
            <TextP>Union’s modularity solutions spans across our entire ecosystem.</TextP>
            <TextP><span class="text-accent-500">Prove:</span> ZK proofs, or ZKPs, are the backbone
              of Union’s network. They are mathematical, indisputable proofs of correctness of the
              cross-chain state generated by a network of solvers.
            </TextP>
            <TextP><span class="text-accent-500">Verify:</span> Through ZKPs, any chain or end user
              can securely verify a blockchain’s state across ecosystems using Union light clients or
              other proof aggregators.
            </TextP>
            <TextP><span class="text-accent-500">Integrate:</span> Combine the proving stack and
              the verification stack to build any type of connection: IBC, ISM, GMP or ICS. Access
              protocols on different chains using any standard.
            </TextP>
          </div>
          <div class="object-contain h-auto w-full">
            <Spline model={cube} loading="eager"/>
          </div>
        </div>
      </div>


      <div>
        <H1>Union <span class="text-accent-500">use cases.</span></H1>
        <div class="flex flex-col 2xl:flex-row gap-8 w-full pt-5">
          <div class="flex flex-col md:max-w-[576px] w-full gap-8">
            <TextP><span class="text-accent-500">Message Passing:</span> Securely transmit messages
              between chains to enable applications like decentralized exchanges (DEXs) and lending
              protocols to work together.
            </TextP>
            <TextP><span class="text-accent-500">Asset Transfers:</span> Facilitate the cross-chain
              transfer of fungible assets, such as native assets or staked derivatives, between any chain
              integrated with the Union network.
            </TextP>
            <TextP><span class="text-accent-500">Cross-chain NFTs:</span> Transfer NFTs between
              chains by ensuring efficient mapping and encoding of NFT data across different standards
              (e.g., ERC-721, ICS-72).
            </TextP>
            <TextP>These are just a few examples. There are no limits to what can be done with the
              state proofs generated by Union in an infinitely scalable blockchain future.
            </TextP>
          </div>
          <div class="object-contain h-auto w-full w-max-[400px]">
            <Spline model={"https://prod.spline.design/i1cLKOjQairx0xcM/scene.splinecode"} loading="eager"/>
          </div>
        </div>
      </div>

      <div>
        <div class="flex flex-col 2xl:flex-row gap-8 w-full pt-5">
          <div>
            <H1>How union <br><span class="text-accent-500">works.</span></H1>
            <div class="flex flex-col md:max-w-[576px] w-full pt-5 gap-8">
              <TextP>Think of Union as a zero-knowledge proof (ZKP) network where the state of each
                chain resides.
                When a new blockchain integrates with Union, it gets a Union light client that verifies
                mathematically secure ZKPs generated from the counterparty chains.
              </TextP>
              <TextP>Anytime a user sends a transaction from Chain A to Chain B, a ZKP is generated
                on Chain A
                through one of the proving markets supported by Union, or directly on bare-metal
                hardware.
                The prover then submits the ZKP to Chain B, where an on-chain verifier—a smart contract
                or
                L2 module—confirms the Merkle inclusion proof that Chain A sent the message. Once the
                ZKP is
                verified, all transactions up to that ZKP are immediately settled, allowing the prover
                to
                settle large batches of transactions.
              </TextP>
              <TextP>Within the light client on Chain B, consensus verification is used to show that
                the
                validators of Chain A signed the Merkle root. In zero-knowledge based IBC, this
                consensus
                verification is achieved by verifying a ZKP of consensus on-chain. Provers generate ZKPs
                of
                consensus by confirming that the validators signed a block’s Merkle root within a
                zero-knowledge circuit.
              </TextP>
              <TextP>What is great about this system is that anyone can generate a ZKP of consensus
                on
                consumer-grade hardware, eliminating censorship risk. There are no trust assumptions on
                the
                prover, nor centralized components like an oracle or multisig. Even if Union ceased to
                exist, the outlined transaction flow would continue permissionlessly into eternity.
              </TextP>
            </div>
          </div>
          <div class="object-contain h-auto w-full max-w-[386px]">
            <Spline model={"https://prod.spline.design/I0VWm3Y5RdptPedN/scene.splinecode"} loading="eager"/>
          </div>
        </div>
      </div>

      <div>
        <div class="flex flex-col 2xl:flex-row gap-8 w-full">
          <div>
            <H1>Trust <br><span class="text-accent-500">verification.</span></H1>
            <div class="flex flex-col md:max-w-[576px] w-full pt-5 gap-8">
              <TextP>State verification between blockchains is often gas-intensive due to the
                complexity of
                verifying consensus on other chains with varied structures and execution environments.
                This is why, in the past, many ecosystems turned to trusted third parties such as
                single-signature, multisig, and MPC bridges for interoperability.
              </TextP>
              <TextP>With Union, trusted third parties are no longer necessary. Consensus
                verification unlocks
                trust-minimized interoperability between blockchains, and zero-knowledge cryptography
                makes the process scalable and cost-efficient fast. Union extends the gold standard of
                the <span class="text-accent-500">Inter-Blockchain Communication Protocol (IBC)</span>
                to all of web3 with ZK-powered consensus verification, unlocking trustless communication
                between blockchains.
              </TextP>
              <TextP>The Inter-Blockchain Communication Protocol (IBC) functions similarly to
                TCP/IP, and
                facilitates communication between independent blockchains. Blockchains that support IBC
                can establish connections with other IBC chains, allowing one blockchain to verify
                proofs against the consensus state of another using a light client. This enables robust
                interoperability among IBC-compatible blockchains, including asset transfers, atomic
                swaps, cross-chain decentralized exchanges, and even cross-chain smart contracts. IBC
                has been lately gaining widespread adoption, making it a promising candidate as the
                governing interoperability standard of Web3.
              </TextP>
            </div>
          </div>
          <div class="object-contain h-auto w-full max-w-[386px]">
            <Spline model={cube} loading="eager"/>
          </div>
        </div>
      </div>

      <div class="flex flex-col gap-12 md:gap-24">
        <div>
          <H1>What is <span class="text-accent-500">galois.</span></H1>
          <div class="flex flex-col 2xl:flex-row w-full pt-5">
            <div class="flex flex-col md:max-w-[576px] w-full gap-8">
              <TextP>Galois is the umbrella term of Union's ZK efforts. It currently has one
                purpose: consensus verification.
              </TextP>
              <TextP>We've built Galois around three fundamental principles: fast execution,
                low-cost operation, and decentralization. The architecture involves three key steps for
                transactions through Union: Emitting a send-packet event, generating a Zero-Knowledge
                Proof (ZKP) of the Union state, and updating the counterparty with the Union state,
                which promotes accessibility for all participants in the system.
              </TextP>
              <TextP>Galois can outperform other zero-knowledge bridges while operating on a
                single machine, avoiding the need for large clusters.
              </TextP>
            </div>
          </div>
        </div>

        <div>
          <H1>What is <span class="text-accent-500">cometbls.</span></H1>
          <div class="flex flex-col 2xl:flex-row w-full pt-5">
            <div class="flex flex-col md:max-w-[576px] w-full gap-8">
              <TextP>Introducing CometBLS, an enhanced blockchain consensus engine building upon
                Tendermint to address the challenges of secure bridging and consensus verification.
              </TextP>
              <TextP>Unlike Tendermint, CometBLS is tailored for efficient zero-knowledge
                proving, which is crucial for bridging to blockspace-restricted chains like Ethereum.
                Leveraging BLS signatures as its foundation, CometBLS reduces proving times,
                facilitating faster and cost-effective bridging transfers. The utilization of BLS
                signatures enables the aggregation of public keys and signatures, minimizing transaction
                size and on-chain computation costs.
              </TextP>
              <TextP>Under CometBLS, the Union network can seamlessly scale to over a hundred
                validators without compromising performance or bridging latency, ushering in a new era
                of secure and scalable blockchain consensus.
              </TextP>
            </div>
          </div>
        </div>

        <div>
          <H1>What is <span class="text-accent-500">voyager.</span></H1>
          <div class="flex flex-col 2xl:flex-row w-full pt-5">
            <div class="flex flex-col md:max-w-[576px] w-full gap-8">
              <TextP>The Inter-Blockchain Communication Protocol (IBC) relies on off-chain actors
                for the transfer of packets and proofs between chains. Union’s in-house relayer,
                Voyager, facilitates the support of new networks independently of upstream
                assistance.
              </TextP>
              <TextP>Voyager’s architecture is event-driven, employing an internal memory queue
                for observed events and I/O processes. Voyager integrates with Galois through gRPC,
                enabling the offloading of computation to dedicated hardware, with upcoming support for
                proving markets.
              </TextP>
              <TextP>This design ensures efficient communication and flexibility in supporting
                diverse blockchain networks.
              </TextP>
            </div>
          </div>
        </div>

      </div>

    </div>

    <div class="relative col-span-1 hidden lg:block">
      <div class="sticky top-24 p-4 pr-0">
        <div class="flex gap-8 h-full justify-end font-mono">
          <div class="flex flex-col gap-6">
            {diver.map(item => (
                    <div class="h-16 flex items-center">
                      <a href="#" class="hover:text-accent-500">{item.text}</a>
                    </div>
            ))}
          </div>
          <div class="flex dive-gradient h-auto min-w-7 relative" id="swim-lane">
            <Image id="scrolling-dot" src={smallWhale} alt="small whale" class="absolute w-10"></Image>
          </div>
          <div class="flex flex-col gap-6 font-mono text-lg">
            {diver.map(item => (
                    <div class="h-16 flex items-center">
                      <p class="text-2xl">{item.meter}</p>
                    </div>
            ))}
          </div>
        </div>
      </div>
    </div>

  </div>

  <script>
    const dot = document.getElementById('scrolling-dot');
    const container = document.getElementById('swim-container');
    const swimlane = document.getElementById('swim-lane');

    window.addEventListener('scroll', () => {
      const containerRect = container.getBoundingClientRect();
      const swimlaneRect = swimlane.getBoundingClientRect();

      const containerTop = containerRect.top;
      const containerBottom = containerRect.bottom;
      const containerHeight = containerRect.height;

      const swimlaneHeight = swimlaneRect.height;

      // Calculate how much the container is scrolled
      const scrollPosition = Math.max(0, Math.min(containerHeight, window.innerHeight - containerTop));

      // Calculate the scroll percentage relative to the container's height
      const scrollPercentage = scrollPosition / containerHeight;

      // Calculate the new top position of the dot within the swimlane
      const maxDotPosition = swimlaneHeight - dot.offsetHeight;
      const newTop = scrollPercentage * maxDotPosition;

      // Set the dot's top position
      dot.style.top = `${newTop}px`;
    });
  </script>


  <style>
      .learn-gradient {
          background: linear-gradient(180deg, #000000 2%, #50767F 12%, #030711 39.08%, #000000 70.5%);
      }

      .dive-gradient {
          background: linear-gradient(180deg, #FFFFFF 4%, #A0ECFD 7.13%, #030711 56%, #000000 100%);
      }


  </style>


